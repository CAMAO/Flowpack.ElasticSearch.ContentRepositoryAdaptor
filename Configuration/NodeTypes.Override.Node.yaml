'Neos.Neos:Node': &node
  search:
    fulltext:
      enable: true
  properties:
    '__identifier':
      search:
        elasticSearchMapping:
          type: keyword
        indexing: '${node.identifier}'

    '__workspace':
      search:
        elasticSearchMapping:
          type: keyword
        indexing: '${node.context.workspace.name}'

    '__path':
      search:
        elasticSearchMapping:
          type: keyword
        indexing: '${node.path}'

    '__parentPath':
      search:
        elasticSearchMapping:
          type: keyword
        # we index *all* parent paths as separate tokens to allow for efficient searching without a prefix query
        indexing: '${Indexing.buildAllPathPrefixes(node.parentPath)}'

    '__sortIndex':
      search:
        elasticSearchMapping:
          type: integer
        indexing: '${node.index}'

    '_removed':
      search:
        elasticSearchMapping: '' # deliberately don't map or index this
        indexing: ''

    # we index the node type INCLUDING ALL SUPERTYPES
    '__typeAndSupertypes':
      search:
        elasticSearchMapping:
          type: keyword
        indexing: '${Indexing.extractNodeTypeNamesAndSupertypes(node.nodeType)}'

    '_lastModificationDateTime':
      search:
        elasticSearchMapping:
          type: date
          format: 'date_time_no_millis'
        indexing: '${(node.lastModificationDateTime ? Date.format(node.lastModificationDateTime, "Y-m-d\TH:i:sP") : null)}'

    '_lastPublicationDateTime':
      search:
        elasticSearchMapping:
          type: date
          format: 'date_time_no_millis'
        indexing: '${(node.lastPublicationDateTime ? Date.format(node.lastPublicationDateTime, "Y-m-d\TH:i:sP") : null)}'

    '_creationDateTime':
      search:
        elasticSearchMapping:
          type: date
          format: 'date_time_no_millis'
        indexing: '${(node.creationDateTime ? Date.format(node.creationDateTime, "Y-m-d\TH:i:sP") : null)}'

'unstructured': *node
